---
name: tox

on:
  workflow_call:
    inputs:
      default_python:
        default: "3.12"
        description: Default python version for other jobs
        required: false
        type: string
      environment:
        default: ""
        description: Which GHA environment to use
        required: false
        type: string
      jobs_producing_coverage:
        default: 8
        description: Number of jobs producing coverage.xml files (deprecated, no longer used
        required: false
        type: number
      min_python:
        default: "3.10"
        description: Minimum python version for matrix generation
        required: false
        type: string
      max_python:
        default: "3.14"
        description: Maximum python version for matrix generation
        required: false
        type: string
      other_names:
        default: |
          docs
          lint
          pkg
          py313-milestone
          py314-milestone
        description: Implicit names for the matrix
        required: false
        type: string
      other_names_also:
        default: ""
        description: Additional names for the matrix
        required: false
        type: string
      platforms:
        default: linux,macos
        description: Comma separated list of platforms to test on, supported linux, macos, windows.
        required: false
        type: string
      run_pre:
        default: ""
        description: Preparatory command to run before test commands.
        required: false
        type: string
      run_post:
        default: ""
        description: Command to run after test commands.
        required: false
        type: string
      skip_explode:
        default: "0"
        description: Set it to "1" to skip creating jobs for each python version.
        type: string
      node-version-file:
        default: ""
        description: Path to the Node.js version file (e.g., `.tool-versions`)
        required: false
        type: string
      log_paths:
        default: |
          .tox/**/pyvenv.cfg
          .tox/**/coverage.xml
          .tox/**/log/
          !**/.DS_Store
          !**/venv/
          !**/popen-gw0/
        description: Paths to log files to upload as artifacts.
        required: false
        type: string
# keep permissions at top level because this is a composite workflow
permissions:
  checks: read
  contents: read
  id-token: write
  packages: write # some tox environments might produce containers
  pull-requests: write # allow codenotify to comment on pull-request
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # might be needed by tox commands
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FORCE_COLOR: 1 # tox, pytest, ansible-lint
  PY_COLORS: 1

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment }}
    outputs:
      matrix: ${{ steps.generate_matrix.outputs.matrix }}
    steps:
      - name: Determine matrix
        id: generate_matrix
        uses: ansible/actions/matrix@main
        with:
          min_python: ${{ inputs.min_python }}
          max_python: ${{ inputs.max_python }}
          default_python: ${{ inputs.default_python }}
          other_names: |
            ${{ inputs.other_names }}
            ${{ inputs.other_names_also }}
          skip_explode: ${{ inputs.skip_explode }}
          platforms: ${{ inputs.platforms }}

  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os || 'ubuntu-24.04' }}
    environment: ${{ inputs.environment }}
    needs:
      - prepare
    defaults:
      run:
        shell: ${{ matrix.shell || 'bash'}}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0 # needed by setuptools-scm
          submodules: true

      - name: Set pre-commit cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        if: ${{ matrix.name == 'lint' }}
        with:
          path: |
            ~/.cache/pre-commit
          key: pre-commit-${{ matrix.name }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.uv_python_version || '3.12' }}

      - name: Install and validate python build tools
        run: |
          set -exuo pipefail
          python3 --version
          which -a python3
          which -a uv
          uv --version
          uv tool install --with tox-uv tox
          uv tool install pip
          uv tool install coverage
          pip --version
          tox --version
          coverage --version

      - name: Set up Node.js
        if: ${{ inputs.node-version-file != '' }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version-file: ${{ inputs.node-version-file }}

      - name: Run pre
        if: ${{ inputs.run_pre }}
        run: ${{ inputs.run_pre }}

      - name: Prepare path for uv
        run: |
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Install mise
        if: ${{ matrix.mise == 'true' }}
        run: |
          set -exuo pipefail
          type mise >/dev/null || {
            curl -s https://mise.run | MISE_QUIET=1 sh
            echo "$HOME/.local/share/mise/bin" >> $GITHUB_PATH
            echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH
          }
          mise install

      - name: Ensure mise python3 is used by default
        if: ${{ matrix.mise == 'true' }}
        run: |
          set -exuo pipefail
          if [[ "$(which python3)" != */mise/* ]]; then
              echo "python3 is not the mise python3"
              exit 1
          fi

      - run: ${{ matrix.command }}

      - run: ${{ matrix.command2 }}
        if: ${{ matrix.command2 }}

      - run: ${{ matrix.command3 }}
        if: ${{ matrix.command3 }}

      - run: ${{ matrix.command4 }}
        if: ${{ matrix.command4 }}

      - run: ${{ matrix.command5 }}
        if: ${{ matrix.command5 }}

      - name: Run post
        if: ${{ inputs.run_post }}
        run: ${{ inputs.run_post }}

      - name: Archive logs and coverage data
        uses: coactions/upload-artifact@ec1957e16e4ecd304d3a115907ccb4ba5f636e9d # v4
        with:
          name: logs-${{ matrix.name }}.zip
          include-hidden-files: true
          if-no-files-found: error
          path: ${{ inputs.log_paths }}

      - name: Upload coverage data to codecov.io
        id: upload-coverage
        if: ${{ !cancelled() && hashFiles('**/coverage.xml') != '' }}
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          name: ${{ matrix.name }}
          fail_ci_if_error: true
          disable_search: true
          plugins: noop
          files: "**/coverage.xml"
          # Only one flag is allowed since https://github.com/codecov/gazebo/pull/3375
          # os is not needed because is detected automatically
          flags: ${{ runner.arch }}-${{ matrix.python_version }}
          use_oidc: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) }}

      - name: Upload test results to codecov.io
        id: upload-test-results
        if: ${{ !cancelled() && hashFiles('junit.xml') != '' }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1
        with:
          fail_ci_if_error: true
          name: ${{ matrix.name }}
          # unable to use wildcards yet due to https://github.com/codecov/test-results-action/issues/110
          flags: ${{ matrix.python_version }},${{ matrix.os }}
          use_oidc: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) }}

      - name: Report failure if git reports dirty status
        run: |
          # See https://github.com/codecov/codecov-action/issues/1851
          rm -rf codecov codecov.SHA256SUM codecov.SHA256SUM.sig
          if [[ -n $(git status -s) ]]; then
            # shellcheck disable=SC2016
            echo -n '::error file=git-status::'
            printf '### Failed as git reported modified and/or untracked files\n```\n%s\n```\n' "$(git status -s)" | tee -a "$GITHUB_STEP_SUMMARY"
            exit 99
          fi

  check:
    if: always()
    environment: ${{ inputs.environment }}
    needs:
      - test
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6

      - name: Merge logs into a single archive
        # Should do nothing if job is retried
        uses: actions/upload-artifact/merge@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: logs.zip
          pattern: logs-*.zip
          delete-merged: true
          include-hidden-files: true
          separate-directories: true

      - name: Download artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: logs.zip

      # We want to run sonarclould upload only *once* with all coverage.xml files because
      # otherwise it will produce false positives about uncovered lines.
      - name: Prepare SonarCloud args
        # Run only for pull requests or push to main
        if: >
          ${{ !cancelled() &&
          hashFiles('**/coverage.xml') != '' &&
          (github.event_name == 'pull_request' ||
          (github.event_name == 'push' && github.ref_name =='main')
          )}}
        shell: bash
        run: |
          PR_NUMBER=${{ github.event.number }}
          PR_HEAD_SHA=${{ github.event.pull_request.head.sha }}
          # 1. Read the full slug (owner/repo)
          REPO_SLUG="${GITHUB_REPOSITORY}"
          # 2. Split into owner and repo
          IFS="/" read -r REPO_OWNER REPO_NAME <<< "$REPO_SLUG"
          # 3. Export to the workflow environment
          echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME"   >> $GITHUB_ENV
          SONAR_ARGS="-Dsonar.projectKey=${REPO_OWNER}_${REPO_NAME} -Dsonar.organization=${REPO_OWNER}"
          if [[ -n "$PR_NUMBER" ]]; then
            SONAR_ARGS="${SONAR_ARGS} -Dsonar.pullrequest.key=${PR_NUMBER} -Dsonar.pullrequest.branch=${PR_HEAD_SHA}"
          fi
          echo SONAR_ARGS="$SONAR_ARGS" >> $GITHUB_ENV

      - name: SonarCloud scan
        # Run only for pull requests or push to main
        if: >
          ${{ !cancelled() &&
          hashFiles('**/coverage.xml') != '' &&
          (github.event_name == 'pull_request' ||
          (github.event_name == 'push' && github.ref_name =='main')
          )}}
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.CICD_ORG_SONAR_TOKEN_CICD_BOT || secrets.AAP_ORG_SONAR_TOKEN_ANSIBLE_CICD_BOT }}
        with:
          args: ${{ env.SONAR_ARGS }}
        # Temporarily ignore errors if the pull request is from a fork due to lack of upload secrets access
        # See https://issues.redhat.com/browse/AAP-52660
        continue-on-error: ${{ github.event_name == 'pull_request' && github.repository != github.event.pull_request.head.repo.full_name }}

      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

      # See: https://github.com/sourcegraph/codenotify/issues/32
      # - name: Notify repository owners about changes affecting them
      #   uses: sourcegraph/codenotify@54e4320f0d93f162a371d8d9dc1fb11018199746 # v0.6.4
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   # https://github.com/sourcegraph/codenotify/issues/19
      #   continue-on-error: true

      - name: Send CI failure notification
        if: always() && needs.test.result == 'failure' && github.ref == 'refs/heads/main'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.DEVTOOLS_CI_SLACK_URL }}
        run: |
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            MESSAGE_ID="ci-failure-${GITHUB_RUN_ID}-$(date +%s)"
            # Send Slack notification
            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\":\" Python tests failed in jobs: test for '${GITHUB_REPOSITORY}' (tox.yml). Check logs: '${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}'\", \"ts\":\"$MESSAGE_ID\"}" \
              $SLACK_WEBHOOK_URL
          fi
